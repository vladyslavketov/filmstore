{"mappings":"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","sources":["src/common/js/refs.js","src/components/loader/loader.js","src/common/js/onLoad.js","src/common/js/onScroll.js","src/components/btns/btn-up/btn-up.js","src/api/api-tmdb.js","src/templates/createMovieCardMarkup.js","src/templates/createMovieDetailsMarkup.js","src/components/modal/modal.js","src/components/search-form/search-form.js","src/layouts/sections/movies/movies.js","src/common/js/createListMarkup.js"],"sourcesContent":["const refs = {\n  body: document.querySelector('body'),\n  header: document.querySelector('header'),\n\n  loader: document.querySelector('.loader'),\n  modal: document.querySelector('.modal'),\n  modalCloseBtn: document.querySelector('.backdrop .modal__close-btn'),\n  pagination: document.querySelector('div.pagination'),\n  btnUp: document.querySelector('.btn-up'),\n\n  searchForm: document.querySelector('form.search-form'),\n  moviesList: document.querySelector('.movies__list'),\n};\nexport default refs;","import refs from '../../common/js/refs';\n\nexport function showLoader() {\n  refs.body.classList.add('isLoading');\n  refs.loader.parentElement.classList.remove('isHidden');\n}\n\nexport function hideLoader() {\n  refs.body.classList.remove('isLoading');\n  refs.loader.parentElement.classList.add('isHidden');\n}","import { hideLoader } from '../../components/loader/loader';\n\nwindow.addEventListener('load', (() => {\n  window.scrollTo(0, 0);\n  hideLoader();\n}));\n\n// === інший синтаксис ===\n// window.onload = hideLoader();\n// ===  ===\n\n// refs.body.scrollTop();\n// refs.body.scrollIntoView(true);","import refs from './refs';\nimport { showBtnUp, hideBtnUp, onBtnUpClick } from '../../components/btns/btn-up/btn-up';\n\nwindow.addEventListener('scroll', onWindowScroll);\nrefs.btnUp.addEventListener('click', onBtnUpClick);\n\nfunction onWindowScroll() {\n  const windowPageYOffset = window.pageYOffset;\n\n  if (windowPageYOffset > 40) {\n    refs.body.classList.add('isScrolling');\n\n    if (windowPageYOffset > 500) showBtnUp();\n    else if (windowPageYOffset <= 500) hideBtnUp();\n  } else if (windowPageYOffset <= 40) refs.body.classList.remove('isScrolling');\n}","import refs from '../../../common/js/refs';\n\nexport function showBtnUp() {\n  refs.btnUp.classList.remove('isHidden');\n}\n\nexport function hideBtnUp() {\n  refs.btnUp.classList.add('isHidden');\n}\n\nexport function onBtnUpClick() {\n  window.scrollTo(0, 0);\n}","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '9cb79068ade378f45d510f1b7326cccd';\n\nexport async function getMovies(typeOfQuery, movieId, searchQuery) {\n  let options;\n  let queryOptions = '';\n\n  switch (typeOfQuery) {\n    case 'search':\n      options = `search/movie`;\n      queryOptions = `&query=${searchQuery}`;\n      break;\n\n    case 'details':\n      options = `movie/${movieId}`;\n      break;\n\n    case 'video':\n      options = `movie/${movieId}/videos`;\n      break;\n\n    case 'cast':\n      options = `movie/${movieId}/credits`;\n      break;\n\n    case 'reviews':\n      options = `movie/${movieId}/reviews`;\n      break;\n\n    case 'trend':\n      options = `trending/all/week`;\n      break;\n\n    case 'genres':\n      options = `genre/movie/list`;\n      break;\n\n    default:\n      console.log('Invalid typeOfQuery');\n  }\n\n  const res = await fetch(`${BASE_URL}${options}?api_key=${API_KEY}${queryOptions}`);\n  const resJson = await res.json();\n  return resJson;\n\n  // ===== old return ==================================================\n  // return fetch(`${BASE_URL}${options}?api_key=${API_KEY}${queryOptions}`).then(\n  //   res => res.json()\n  // );\n}\n\n// ===== Деталі ================================================================================\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n// ================================================================================","export default function createMovieCardMarkup(data) {\n  const { id, movieTitle, movieImg, releaseYear, genresNamesList } = data;\n \n  return `\n    <li class=\"movie-card animate__animated animate__zoomIn\">\n      <img\n        class=\"movie-card__img\"\n        src=${movieImg}\n        alt=${movieTitle}\n        width=\"300\"\n        height=\"450\"\n      />\n      <div class=\"movie-card__desc\">\n        <p class=\"movie-card__title\">${movieTitle}</p>\n        <p class=\"movie-details__genres\">${genresNamesList}</p>\n        <p class=\"movie-card__year\">${releaseYear}</p>\n      </div>\n      <button type=\"button\" class=\"movie-card__details-btn\" data-id=${id} aria-label=\"to open movie details\"></button>\n    </li>\n  `;\n}\n\n// TODO - додати data-filter=${category}","export default function createMovieDetailsMarkup(detailsRes, videoKey) {\n  const { id, title, name, poster_path, release_date, firstDate, genres, } = detailsRes;\n  const movieTitle = title || name;\n  const movieImg = `https://image.tmdb.org/t/p/w500${poster_path}`;\n  const movieGenres = genres?.map(genr => genr.name).join(\", \");\n  const releaseDate = release_date ? release_date : firstDate;\n  const year = releaseDate ? releaseDate.slice(0, 4) : '';\n  \n  const movieIframe = !videoKey\n    ? ''\n    : ` <iframe\n          src=\"https://www.youtube.com/embed/${videoKey}?cc_load_policy=1?rel=0&showinfo=0&autoplay=1\"\n          title=\"YouTube video player\"\n          frameborder=\"0\"\n          allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture;\"\n          allowfullscreen\n          autoplay=\"0\"\n        ></iframe>`;\n     \n    return `\n    <div class=\"movie-details animate__animated animate__zoomIn\">\n      <img\n        class=\"movie-details__img\"\n        src=${movieImg}\n        alt=${movieTitle}\n      \n      />\n      <div class=\"movie-details__desc\">\n        <p class=\"movie-details__title\">${movieTitle}</p>\n        <p class=\"movie-details__desc-row movie-details__genres\"><span>Genre</span>${movieGenres}</p>\n        <p class=\"movie-details__desc-row movie-details__year\"><span>Year</span>${year}</p>\n        <button type=\"button\" class=\"movie-details__video-play-btn\" data-id=${id} aria-label=\"to open movie details\">Show official trailer</button>\n      </div>\n      <div class=\"movie-details__video isHidden\">${movieIframe}</div>\n    </div>\n  `;\n}\n\n\n// `width=\"448\" height=\"672\"`\n// `width=\"336\" height=\"504\"`\n// `width=\"368\" height=\"552\"`\n\n\n// `width=\"332\" height=\"498\"`????","import refs from \"../../common/js/refs\";\n\nconst backdrop = refs.modal.parentElement;\n\nfunction onBackdropClick(e) {\n  if (e.currentTarget === e.target) closeModal();\n}\n\nfunction onEscKeyPress(e) {\n  if (backdrop.classList.contains('isHidden')) return;\n  if (e.code === 'Escape') closeModal();\n}\n\nexport function openModal() {\n  backdrop.classList.remove('isHidden');\n  refs.body.classList.add('modalIsOpen');\n\n  backdrop.addEventListener('click', onBackdropClick);\n  window.addEventListener('keydown', onEscKeyPress);\n  refs.modalCloseBtn.addEventListener('click', closeModal);\n}\n\nexport function closeModal() {\n  backdrop.classList.add('isHidden');\n  refs.body.classList.remove(\"modalIsOpen\");\n  refs.modal.innerHTML = \"\";\n\n  backdrop.removeEventListener('click', onBackdropClick);\n  window.removeEventListener('keydown', onEscKeyPress);\n  refs.modalCloseBtn.removeEventListener('click', closeModal);\n}","import { renderMovies } from \"../../layouts/sections/movies/movies\";\nimport { getMovies } from \"../../api/api-tmdb\";\nimport refs from \"../../common/js/refs\";\n\n// ===== addEventListeners ==================================================\nrefs.searchForm.addEventListener('submit', onFormSubmit)\n\n// ===== On function ==================================================\nasync function onFormSubmit(e) {\n  e.preventDefault();\n\n  const searchQuery = e.target.elements.searchQuery.value;\n  const searchRes = await getMovies('search', null, searchQuery);\n\n  renderMovies(searchRes.results);\n}","import { getMovies } from '../../../api/api-tmdb';\nimport refs from '../../../common/js/refs';\nimport createListMarkup from '../../../common/js/createListMarkup';\nimport createMovieCardMarkup from '../../../templates/createMovieCardMarkup';\nimport createMovieDetailsMarkup from '../../../templates/createMovieDetailsMarkup';\nimport { createPaginationBtnListMarkup } from '../../../components/pagination/pagination';\nimport { showLoader, hideLoader } from '../../../components/loader/loader';\nimport { openModal } from '../../../components/modal/modal';\n\nimport '../../../components/search-form/search-form';\n\nlet allGenresList = null;\nonFirstLoad();\n\n// ===== addEventListeners ==================================================\nrefs.moviesList.addEventListener('click', onMovieDetailsBtnClick);\n\n// ===== On function ==================================================\nasync function onFirstLoad() {\n  allGenresList = await getAllGenres();\n\n  const trendRes = await getMovies('trend');\n  const trendingMovies = trendRes.results;\n\n  renderMovies(trendingMovies);\n}\n\nasync function onMovieDetailsBtnClick(e) {\n  if (!e.target.classList.contains('movie-card__details-btn')) return;\n  showLoader();\n  const currentMovieId = e.target.dataset.id;\n  const videoRes = getMovies('video', currentMovieId);\n  const videoKey = await getMovieDetailsVideoKey(videoRes);\n  const detailsRes = await getMovies('details', currentMovieId);\n\n  const movieDetailsMarkup = createMovieDetailsMarkup(detailsRes, videoKey);\n  refs.modal.innerHTML = movieDetailsMarkup;\n  openModal();\n\n  const movieDetailsPlayBtnRef = refs.modal.querySelector(\".movie-details__video-play-btn\");\n  videoKey && movieDetailsPlayBtnRef.addEventListener('click', onMovieDetailsPlayBtnClick); // TODO - remove EventListener\n  !videoKey && movieDetailsPlayBtnRef.classList.add('isHidden');\n\n  hideLoader();\n}\n\nfunction onMovieDetailsPlayBtnClick(e) {\n  const movieDetailsVideoRef = refs.modal.querySelector(\".movie-details__video\");\n  movieDetailsVideoRef.classList.toggle('isHidden');\n  e.target.textContent === 'Show official trailer'\n    ? (e.target.textContent = 'Hide official trailer')\n    : (e.target.textContent = 'Show official trailer');\n}\n\n// ===== GET function ==================================================\nasync function getAllGenres() {\n  const genresRes = await getMovies('genres');\n  return genresRes.genres;\n}\n\nfunction getDataToRender(dataArray) {\n  const moviesDataToRender = dataArray.map(data => {\n    const {\n      id,\n      name,\n      title,\n      genre_ids,\n      poster_path,\n      release_date,\n      first_air_date,\n    } = data;\n    const movieTitle = title || name;\n    const genresNamesList = getGenresNames(genre_ids);\n    const movieImg = `https://image.tmdb.org/t/p/w500${poster_path}`;\n    const releaseDate = release_date ? release_date : first_air_date;\n    const releaseYear = releaseDate ? releaseDate.slice(0, 4) : '';\n\n    return { id, movieTitle, movieImg, releaseYear, genresNamesList };\n  });\n\n  return moviesDataToRender;\n}\n\nfunction getGenresNames(genresIds) {\n  const genresNames = genresIds\n    .map(genreId => allGenresList.find(genre => genreId === genre.id)?.name)\n    .filter(genreName => genreName !== undefined)\n    .join(', ');\n\n  return genresNames;\n}\n\nasync function getMovieDetailsVideoKey(data) {\n  const { results } = await data;\n  if (!results || results.length < 1) return null;\n\n  const officialTrailer = results.find(\n    res => res.name.toLowerCase() === 'official trailer'\n  );\n  const anyTrailer = results.find(res =>\n    res.name.toLowerCase().includes('trailer')\n  );\n\n  return officialTrailer?.key && anyTrailer?.key;\n}\n\n// ===== other function ==================================================\nexport function renderMovies(moviesData) {\n  const dataToRender = getDataToRender(moviesData);\n  const listMarkup = createListMarkup(dataToRender, createMovieCardMarkup);\n  refs.moviesList.innerHTML = listMarkup;\n}\n\nasync function renderPagination(pages) {\n  if (!pages || pages < 2) return (refs.pagination.innerHTML = ''); // TODO -  передивитись блок іф\n  refs.pagination.innerHTML = createPaginationBtnListMarkup(pages);\n}\n\n// =========\n// const PER_PAGE = 20;\n// const pages = Math.ceil(trendingMovies.length / PER_PAGE);","export default function createListMarkup(dataArray, createItemMarkup) {\n  if (!Array.isArray(dataArray) || !dataArray.length > 0)\n    return 'Нажаль данні не завантажились( Спробуйте пізніше'; // TODO - add notification\n  return dataArray.map(data => createItemMarkup(data)).join('');\n}"],"names":["$07f5a4e5854dd40e$export$2e2bcd8739ae039","body","document","querySelector","header","loader","modal","modalCloseBtn","pagination","btnUp","searchForm","moviesList","$5c0d9e93748f353d$export$5cee2c2772922923","classList","remove","parentElement","add","window","addEventListener","scrollTo","windowPageYOffset","pageYOffset","async","$c6feac49e3432087$export$60e1c8f5f122c5ac","typeOfQuery","movieId","searchQuery","options","queryOptions","console","log","res","fetch","json","$431b21e7d8ed4ba3$export$2e2bcd8739ae039","data","id","movieTitle","movieImg","releaseYear","genresNamesList","$10fc28c00008f333$export$2e2bcd8739ae039","detailsRes","videoKey","title","name","poster_path","release_date","firstDate","genres","movieGenres","map","genr","join","releaseDate","slice","$962769fdde024266$var$backdrop","$962769fdde024266$var$onBackdropClick","e","currentTarget","target","$962769fdde024266$export$3f6fecd573f3fa48","$962769fdde024266$var$onEscKeyPress","contains","code","innerHTML","removeEventListener","preventDefault","elements","value","$55b846596b28c106$export$1a30573fde3dfc62","results","$55b846596b28c106$var$allGenresList","$55b846596b28c106$var$onMovieDetailsPlayBtnClick","toggle","textContent","$55b846596b28c106$var$getDataToRender","dataArray","genre_ids","first_air_date","genreId","find","genre","filter","genreName","undefined","moviesData","dataToRender","listMarkup","createItemMarkup","Array","isArray","length","$55b846596b28c106$var$getAllGenres","trendRes","$55b846596b28c106$var$onFirstLoad","currentMovieId","dataset","videoRes","officialTrailer","toLowerCase","anyTrailer","includes","key","$55b846596b28c106$var$getMovieDetailsVideoKey","movieDetailsMarkup","movieDetailsPlayBtnRef"],"version":3,"file":"index.aaf0983b.js.map"}